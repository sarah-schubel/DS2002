
Querying the World and Chinook Databases:

SELECT Name FROM country WHERE Region = "South America";

SELECT Name, Population FROM country WHERE Name = "Germany";

SELECT Name FROM city WHERE CountryCode = "JPN";

SELECT Name FROM country WHERE Continent = "Africa"
ORDER BY country.Population DESC LIMIT 3;

SELECT Name, LifeExpectancy FROM country WHERE Population > 1000000 AND Population < 5000000;

SELECT Name FROM country
JOIN countrylanguage ON country.code = countrylanguage.CountryCode
WHERE countrylanguage.Language = "French" AND countrylanguage.IsOfficial = "T";

SELECT Title FROM Album WHERE ArtistId = '1';

SELECT FirstName, LastName from Customer WHERE Country = 'Brazil';

SELECT * FROM Playlist;

SELECT COUNT(TrackId) AS RockTracks FROM Track WHERE GenreId = (SELECT GenreId FROM Genre WHERE Name = 'Rock');

SELECT FirstName, LastName FROM Employee WHERE ReportsTo = (SELECT EmployeeId FROM Employee WHERE FirstName = 'Nancy' AND LastName = 'Edwards');

SELECT Invoice.CustomerId, SUM(Invoice.Total) AS TotalSales FROM Invoice
JOIN Customer ON Invoice.CustomerId = Customer.CustomerId
GROUP BY Customer.CustomerId
ORDER BY TotalSales DESC;



-----

Create Your Own Database:

CREATE TABLE Flavors (
    FlavorID INT PRIMARY KEY,
    Name TEXT NOT NULL
    );

CREATE TABLE Toppings (
    ToppingID INT PRIMARY KEY,
    Name TEXT NOT NULL
    );

CREATE TABLE Sales (
    SaleID INT PRIMARY KEY,
    FlavorID INT,
    ToppingID INT,
    SaleDate DATE NOT NULL,
    Scoops INT NOT NULL,
    TotalPrice DECIMAL(10, 2),
    FOREIGN KEY (FlavorID) REFERENCES Flavors(FlavorID),
    FOREIGN KEY (ToppingID) REFERENCES Toppings(ToppingID)
    );

INSERT INTO Flavors (FlavorID, Name) VALUES
(0, 'Vanilla'),
(1, 'Chocolate'),
(2, 'Strawberry'),
(3, 'Mint'),
(4, 'Cookie Dough');

INSERT INTO Toppings (ToppingID, Name) VALUES
(0, 'Nothing'),
(1, 'Sprinkles'),
(2, 'Chocolate Syrup'),
(3, 'Marshmallows'),
(4, 'Cherries');

INSERT INTO Sales (SaleID, SaleDate, FlavorID, Scoops, ToppingID, TotalPrice) VALUES
(0, '2024-09-05', 3, 2, 1, 5.00),
(1, '2024-09-05', 2, 1, 0, 2.00),
(2, '2024-09-05', 4, 1, 4, 3.00),
(3, '2024-09-05', 0, 2, 2, 5.00),
(4, '2024-09-05', 1, 1, 3, 3.00),
(5, '2024-09-05', 1, 2, 1, 5.00);

What were the total sales?
SELECT SUM(TotalPrice) FROM Sales;

What was the total sales by flavor?
SELECT Flavors.Name AS FlavorName, SUM(Sales.TotalPrice) AS TotalRevenue
FROM Sales
JOIN Flavors ON Sales.FlavorID = Flavors.FlavorID
GROUP BY Flavors.Name;

What was the most popular topping?
SELECT Toppings.Name AS ToppingName,
COUNT(Sales.ToppingID) AS UsageCount
FROM Sales
JOIN Toppings ON Sales.ToppingID = Toppings.ToppingID
GROUP BY Toppings.Name
ORDER BY UsageCount DESC LIMIT 1;

